// run following commands after changing this file:
// npx prisma generate
// npx prisma db push

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(uuid()) @map("_id")
  firstName         String
  lastName          String
  username          String   @unique
  email             String   @unique
  isEmailVerified   Boolean  @default(false)
  password          String
  lastPasswordReset DateTime @default(now())
  hasShownCookieMsg Boolean  @default(false)

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  reservations Reservation[]
  reviews      Review[]
}

model Accommodation {
  id          String   @id @default(uuid()) @map("_id")
  slug        String   @unique
  title       String
  description String?
  image       String
  price       Float
  amenities   String[]
  virtualPath String

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  reservations Reservation[]
}

enum Gender {
  male
  female
}

model Reservation {
  id              String   @id @default(uuid()) @map("_id")
  accommodationId String
  userId          String
  checkIn         DateTime
  checkOut        DateTime

  address       String
  birthday      DateTime
  contactNumber String
  gender        Gender
  healthIssue   String

  guests Json

  totalPrice    Float
  status        ReservationStatus @default(pending)
  paymentMethod String?
  paymentDate   DateTime?

  user          User          @relation(fields: [userId], references: [id])
  accommodation Accommodation @relation(fields: [accommodationId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ReservationStatus {
  pending
  accepted
  paid
}

// review schema
model Review {
  id         String  @id @default(uuid()) @map("_id")
  userId     String
  rating     Int
  comment    String
  visibility Boolean @default(true)

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
